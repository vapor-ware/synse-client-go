#!/usr/bin/env groovy

pipeline {

  agent any


  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    // Run unit tests.
    stage('Test') {
      steps {
        script {
          docker.image('vaporio/jenkins-agent-golang:latest').inside() {
            sh 'CGO_ENABLED=0 go test -covermode=atomic ./...'
          }
        }
      }
    }

    // Generate a new release draft on GitHub for a tag matching a version string
    // pattern. The release will include an auto-generated changelog and build
    // artifacts.
    stage('Draft GitHub Release') {
      when {
        // example matches: 1.2.3, 1.2.3-dev
        tag pattern: '(0|[1-9]*)\\.(0|[1-9]*)\\.(0|[1-9]*)(-(\\S*))?$', comparator: "REGEXP"
      }
      environment {
        GITHUB_USER = 'vapor-ware'
        GITHUB_TOKEN = credentials('vio-bot-gh-token')
        GITHUB_REPONAME = 'synse-client-go'
      }
      steps {
        sh 'make ci-check-version'

        // Auto-generate a changelog for the release
        sh './bin/ci/generate_changelog.sh'

        // Create the release
        sh 'docker pull edaniszewski/ghr'
        sh 'docker run --rm -v ${WORKSPACE}:/repo edaniszewski/ghr -u ${GITHUB_USER} -r ${GITHUB_REPONAME} -t ${GITHUB_TOKEN} -b "$(cat ./CHANGELOG.md)" -replace -draft ${TAG_NAME}'
      }
    }
  }
}
